https://codecore.certified.in/codecore-bootcamp-september-2017-cohort-copy/js-express-databases/presentation-103

>>>>  knex.js  ----> is a "batteries included" SQL query builder for Postgres, MSSQL, MySQL, MariaDB, SQLite3, and Oracle designed to be
flexible, portable, and fun to use. Totally idependent of Express and works but its own.
http://knexjs.org/
npm install -g pg knex

*** including this lines inside the package.json, it's possible to run it from npm

dropdb --echo fotorol_dev  (erase completely the database)
dropdb --echo --if-exists fotorol_dev


# package.json
,
"db:create": "createdb --echo fotorol_dev",
"db:drop": "dropdb --echo --if-exists fotorol_dev"


* npm command in terminal:

npm run db:create


knex init  (begin )


*** need to ammend the file knexfile.js

*** create a folder called 'db'and a file index.js

### typing env shows all variables from the system and it needs to be used to check what exists

### node and after process will show everything that is running
process.env
process.env.NODE_ENV

>>> knex mmigrate:make CreatePosts  ---->
" result after running the command above
Using environment: development
Created Migration: /home/wellington/CodeCore/fotorol/db/migrations/20171201102305_CreatePosts.js
"

### need to ammend the file created inside the folder above (db): 20171201102305_CreatePosts.js
*** here is made settings about the table like auto increments
*** return is something important or the result won't be showed/done


***knex migrate:latest
 "
Using environment: development
Batch 1 run: 1 migrations
/home/wellington/CodeCore/fotorol/db/migrations/20171201102305_CreatePosts.js
"
***knex migrate:rollback

#### when creating a file (examples.js) to insert data in db, it needs to point to the index.js that is the one makes connection

*** node db/examples.js (runs the file with data to put in DB)

*** CRUD for posts ----> POST, GET, PUT/PATH, DELETE
# first, it don't need to do it in the index.js in the root folder, but creates a new subfolder routes and a file named posts.js, what
requires (involves) Express, but inside the index.js we need to add some commands:

creates: folders inside views: partials and posts








<bump>
